{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","equalsStyle","background","position","witdth","bottom","props","_this","Object","_home_miranda_Desktop_My_project_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_miranda_Desktop_My_project_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_miranda_Desktop_My_project_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleClick","buttonName","currentNumber","state","operator","newNumber","slice","length","setState","decimal","eval","total","react__WEBPACK_IMPORTED_MODULE_5___default","className","Screen","id","Button","name","style","React","Component","runParentHandleClick","_this2","onClick"],"mappings":"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","file":"static/js/main.ac92b67a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nconst equalsStyle = {\n  background: '#004466',\n  position: 'absolute',\n  witdth: 130,\n  bottom: 5\n};\nclass App extends React.Component{\nconstructor(props){\nsuper(props)\nthis.state = {\n  currentNumber: \"0\",\n  operator: false,\n  decimal: false,\n  total: \"equalStyle\"\n} \n}  \n\nhandleClick = (buttonName)=>{\nlet currentNumber = this.state.currentNumber\nlet operator = this.state.operator\nswitch(true){\ncase buttonName === \"0\"|| \n   buttonName === \"1\"||\n   buttonName === \"2\"||\n   buttonName === \"4\"||\n   buttonName === \"3\"||\n   buttonName === \"5\"||\n   buttonName === \"6\"||\n   buttonName === \"7\"||\n   buttonName === \"8\"||\n   buttonName === \"9\":\n  if(this.state.currentNumber !== \"0\"){\n   currentNumber += buttonName\n   operator = false\n  }else{\n    currentNumber = buttonName\n  }\n      \n  break\n  \n  case buttonName === \"+\"||\n       buttonName === \"-\"||\n       buttonName === \"*\"||\n       buttonName === \"/\":\n  if(!this.state.operator){\n    currentNumber += buttonName\n    operator = true\n    this.setState({decimal:false})\n  }else{\n    const newNumber = currentNumber.slice(0, currentNumber.length-1)\n    currentNumber = newNumber\n    currentNumber += buttonName\n  }\n  break\ncase buttonName === \"AC\":\n  currentNumber = \"0\"\n  operator = false\n  this.setState({decimal:false})\n  break\n  \ncase buttonName === \"=\":\n  currentNumber = eval(currentNumber)\n  operator = false\n  break\n  \ncase buttonName === \".\":\n  if(!this.state.decimal){\n    currentNumber += \".\"\n    this.setState({decimal:true})\n  }\n  \n}\nthis.setState({currentNumber})\nthis.setState({operator})\n}\n\nrender(){\nreturn(\n<div>\n  <div className = \"calculator\">\n    \n   \n  <Screen id = \"display\" currentNumber = {this.state.currentNumber}/>          \n <Button id = \"seven\" name = \"7\" handleClick = {this.handleClick}/>\n <Button id = \"eight\" name = \"8\" handleClick = {this.handleClick}/>\n <Button id = \"nine\" name = \"9\" handleClick = {this.handleClick}/>\n <Button id = \"add\" name = \"+\" handleClick = {this.handleClick}/>\n  <Button id = \"four\" name = \"4\" handleClick = {this.handleClick}/>\n  <Button id = \"five\" name = \"5\" handleClick = {this.handleClick}/>\n  <Button id = \"six\" name = \"6\" handleClick = {this.handleClick}/>\n  <Button id = \"subtract\" name = \"-\" handleClick = {this.handleClick}/>\n  <Button id=\"one\" name = \"1\" handleClick = {this.handleClick}/>\n  <Button id = \"two\" name = \"2\" handleClick = {this.handleClick}/>\n  <Button id = \"three\" name = \"3\" handleClick = {this.handleClick}/>\n  <Button id = \"multiply\" name = \"*\" handleClick = {this.handleClick}/>\n  <Button id = \"clear\" name = \"AC\" handleClick = {this.handleClick}/>\n  <Button id=\"zero\" name = \"0\" handleClick = {this.handleClick}/>\n  <Button id = \"decimal\" name = \".\" handleClick = {this.handleClick}/>\n  <Button id = \"divide\" name = \"/\" handleClick = {this.handleClick}/>\n  <Button id=\"equals\" name = \"=\" handleClick = {this.handleClick} style={equalsStyle}/>\n    \n  </div>      \n      \n</div>\n)\n}\n}\nclass Screen extends React.Component{\n  render(){\n    return(\n    <div id = {this.props.id}>\n        {this.props.currentNumber}\n      </div>\n    )\n  }\n}\n\nclass Button extends React.Component{\n runParentHandleClick = () => {\n   this.props.handleClick(this.props.name)\n }\n  \n  render(){\n   return(\n          <button id = {this.props.id} onClick = {this.runParentHandleClick}>{this.props.name}</button>\n    )\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}